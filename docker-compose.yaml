version: '3.8'
services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: DjangoPlatformForStady:latest
    env_file:
      - .env
    environment:
      - WAIT_FOR_DB=true
      - DJANGO_MIGRATE=true
      - DJANGO_COLLECTSTATIC=true
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - webnet

  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - webnet

  redis:
    image: redis:7
    networks:
      - webnet

  celery:
    build:
      context: ./web
      dockerfile: Dockerfile
    command: celery -A DjangoPlatformForStady worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - webnet

  celery-beat:
    build:
      context: ./web
      dockerfile: Dockerfile
    command: celery -A DjangoPlatformForStady beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - webnet

  nginx:
    image: nginx:stable
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - web
    networks:
      - webnet

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  webnet:
